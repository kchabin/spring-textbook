http는 신뢰성 있는 데이터 전송 프로토콜 사용

- 지구 반대편 데이터 전송 시 손상 or 꼬이지 않음 보장

웹 클라이언트와 서버

- http 요청을 서버로 전송
- 요청받은 객체(index.html)를 찾고 성공했다면 타입, 길이 등의 정보와 함께 응답에 실어서 보냄

웹 리소스

- 웹 서버 파일 시스템의 정적 파일
    - 반드시 정적일 필요는 없음 → 동적 콘텐츠 리소스
- 어떤 종류의 콘텐츠든 가능
    - ex) 기업 판매예측 스프레드 시트 파일, 지역 공공 도서관 서가 탐색 웹 게이트웨이, 인터넷 검색엔진

미디어 타입

- MIME - 데이터 포맷 라벨
    - Multipurpose Internet Mail Extensions
    - 원래 각기 다른 전자메일 시스템 사이에서 메시지가 오갈 때 겪는 문제점을 해결하기 위해 설계됨
    - 멀티미디어 콘텐츠를 기술하고 라벨을 붙이기 위해 채택
- 모든 http 객체 데이터에 붙임
- 웹 브라우저는 서버로부터 객체를 돌려받을 때, 다룰 수 있는 객체인지 확인
    - 수백 가지 다룰 수 있음
    - 특별한 포맷 → 외부 플러그인 sw

```kotlin
primary object type / specific object type
```

- text/html 라벨
- text/plain 라벨
- image/jpeg 라벨
- image

## URI

- 웹 서버 리소스는 각자 이름을 갖고 있음. → 웹클은 관심있는 리소스를 지목 가능
- 서버 리소스 이름 = 통합 자원 식별자 = URI(uniform resource identifier)
- URL과 URN이라는 두 종류의 자원 식별자가 존재함

```kotlin
http://www.joes.com/specials/saw-blade.gif
```

- http 프로토콜을 사용해서 해당 주소에서 specials/saw-blade.gif 라고 불리는 리소스를 가져와라
- 프로토콜, 서버, 리소스를 명시함

URL

- 통합 자원 지시자ㅏ
- 특정 서버의 한 리소스에 대한 구체적인 위치와 접근 방법
- 스킴(scheme) : url의 첫번째 부분 → 프로토콜
- 오늘날 대부분의 uri는 url임

URN

- 유니폼 리소스 이름
- 콘텐츠를  이루는 한 리소스에 대해, 그 리소스의 위치에 영향 받지 않는 유일무이한 이름 역할
    - 위치독립적
    - 어떤 프로토콜로 접근해도 문제 없음 (이름을 유지하는 한)

트랜잭션

- http 트랜잭션 = 요청 명령 + 응답 결과

메서드

- 모든 http 요청 메시지는 한 개의 메서드를 갖는다.
- 서버에게 어떤 동작이 취해져야 하는지 말해줌
    - 웹페이지 가져오기
    - 게이트웨이 프로그램 실행하기
    - 파일 삭제하기
- GET, PUT, DELETE, POST, HEAD

상태 코드

- 모든 응답 메시지는 상태 코드, 사유 구절(reason phrase)

http 메시지

- 시작줄 - 헤더 - 본문
- 단순한 줄 단위 텍스트 구조
- 시작줄 : 요청(무엇을해야하는지) / 응답(무슨 일이 일어났는지)
- 헤더 : 0개 이상
    
    ```kotlin
    Content-type: text/plain
    Content-length: 19
    // 빈 줄로 끝남
    ```
    
- 본문 : 어떤 종류의 데이터든 들어갈 수 있음(이진 데이터, 텍스트 등)

서버에서 간단한 문서를 가져오는 데는 요청 데이터가 필요없다.

## TCP

- TCP 커넥션
- 오류 없는 데이터 전송
- 순서에 맞는 전달
- 조각나지 않는 데이터 스트림(언제든 어떤 크기로든 보낼 수 있다)

```
HTTP
TCP
IP
```

- http 클라이언트가 서버에 메시지를 전송할 수 있게 되기 전에, IP주소와 포트번호를 사용해 클라이언트와 서버 사이에 TCP/IP 커넥션을 맺어야 함
    - url이 ip주소, 포트번호를 알려줌
        - 포트번호가 빠진 경우 기본값 : `80`

통신 순서

- 웹 브라우저는 서버의 URL에서 호스트명 추출
- 웹브라우저는 서버의 호스트명 → ip 주소 변환
- 웹 브라우저 URL에서 포트번호(있다면) 추출
- 웹 서버와 tcp 커넥션 맺음
- http 요청 전송
- 서버 → 클 응답 돌려줌
- 커넥션이 닫히면, 웹 브라우저는 문서를 보여줌

텔넷 유틸리티는 당신의 키보드를 목적지의 TCP 포트로 연결해주고 출력 TCP 포트를 당신의 화면으로 연결해준다.

- 원격 터미널 세션
- 일반적인 TCP 서버(HTTP 서버 포함)
- nc(netcat)이 더 유연한 도구

http/0.9 

- 구식 클라이언트하고만 사용 가능
- get 메서드만 지원
- mime 타입, http 헤더, 버전 번호 지원 x
- 원래 간단한 html 객체를 받아오기 위해 만들어짐

HTTP/1.0   

- 버전 번호, 헤더, 추가 메서드, 멀티미디어 객체 처리를 추가함

HTTP/1.0+ 

- keep-alive 커넥션, 가상 호스팅 지원, 프락시 연결 지원 등

HTTP/1.1   

- 현재의 버전
- 구조적 결함 교정, 성능 최적화, 잘모된 기능 제거

http/2.0 

- 구글 SPDY 프로토콜을 기반으로 설계 진행 중

## 웹의 구성요소

- 프록시 : 클라이언트와 서버 사이에 위치한 http 중개자
- 캐시 : 많이 찾는 웹페이지는 클라이언트 가까이에 보관하는 http ckdrh
- 게이트웨이 : 다른 앱과 연결된 특별한 웹 서버
- 터널 :단순히 http 통신을 전달하기만 하는 특별한 프록시
- 에이전트 : 자동화된 http 요청을 만드는 준지능적 웹클라이언트
